@model PaginatedList<ProjectVehicle.Models.VehicleMake>

@{
    ViewData["Title"] = "Vehicles";
}

<h1>Vehicles</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Model</th>
            <th>Abrv</th>
            <th>Country</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Model)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Abrv)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Country)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id" class="confirmDeletion">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>


@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index" asp-route-sortOrder = "@ViewData["CurrentSort"]"
asp-route-pageNumber = "@(Model.PageIndex-1)"
asp-route-currentFilter = "@ViewData["CurrentFilter"]"
class="btn btn-default @prevDisabled">Previous</a>

<a asp-action="Index" asp-route-sortOrder = "@ViewData["CurrentSort"]"
asp-route-pageNumber = "@(Model.PageIndex+1)"
asp-route-currentFilter = "@ViewData["CurrentFilter"]"
class="btn btn-default @nextDisabled">Next</a> 